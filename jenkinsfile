
pipeline {
    triggers {
        pollSCM('* * * * *')
    }
    agent any
    tools {
        maven 'M2_HOME'
    }
    environment {
        registry = '231402041009.dkr.ecr.us-east-1.amazonaws.com/jenkins-images'
        registryCredential = 'jenkins-ecr'
        dockerimage = ''
    }

    stages {
        stage("build & SonarQube analysis") {
            agent {
        docker { image 'maven:3.8.6-openjdk-11-slim' }
            }


           steps {
            withSonarQubeEnv('SonarServer') {
                    sh 'mvn sonar:sonar -Dsonar.projectKey=jawidsaboori_hellowolrd19 -Dsonar.java.binaries=.'
            }
           }
        } 
            stage('maven package') {
                steps {
                    sh 'mvn clean'
                    sh 'mvn install -DskipTests'
                    sh 'mvn package -DskipTests'
                }
            }
            stage('Build Image') {
                steps {
                    script {
                        def mavenPom = readMavenPom file: 'pom.xml'
                        dockerImage = docker.build registry + ":${mavenPom.version}"
                    }
                }
            }
            stage('Deploy image') {
                steps {
                    script {
                        docker.withRegistry('https://' + registry, 'ecr:us-east-1:' + registryCredential) {
                            dockerImage.push()
                        }
                    }
                }
            }
        }
    }
